package homework;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;


import practice.Student;

public class TestStudentXMLSAX {

	public static void main(String[] args) {
		List<StudentXML> students = null;
		try {
			SAXParser parser = SAXParserFactory.newInstance().newSAXParser();
			students = new ArrayList<StudentXML>();
			MyHandler handler = new MyHandler(students);
			parser.parse(new File("Students.xml"), handler);
		} catch (ParserConfigurationException e) {
			// TODO 自动生成的 catch 块
			e.printStackTrace();
		} catch (SAXException e) {
			// TODO 自动生成的 catch 块
			e.printStackTrace();
		} catch (IOException e) {
			// TODO 自动生成的 catch 块
			e.printStackTrace();
		}
		for (Student b : students) {
			System.out.println(b);
		}
	}

}

class MyHandler extends DefaultHandler {
	private List<StudentXML> students;

	// 上一个节点的名字，目的是便于知晓文本所属的节点。
	private String preName;
	// 定义对象变量，startElement()和endElement()使用
	private Student student;

	public MyHandler(List<StudentXML> students) {
		this.students = students;
	}

	// 当解析程序读取xml文件前导区时候触发的事件：通常做初始化工作，例如初始化List集合对象
	@Override
	public void startDocument() throws SAXException {
		// TODO 自动生成的方法存根
		super.startDocument();
	}

	/*
	 * 当解析程序读取开始标签时候触发的事件：通常做对象的初始话工作。例如创建一个对象； qName代表当前节点名称
	 * Attributes代表当前节点所有属性对象
	 */
	@Override
	public void startElement(String uri, String localName, String qName,
			Attributes attributes) throws SAXException {
		if (qName.equals("student")) {
			student = new Student();
			student.setNo(Integer.valueOf(attributes.getValue(0)));
		}
		// else if(qName.equals("id")){
		//
		// }
		preName = qName;// 把当前解析的节点名字赋给全局变量。
	}

	/*
	 * 读取文本数据时候触发的事件 ch[] :读取文本的字符数组 start：开始位置 length: 字符数组长度
	 */
	@Override
	public void characters(char[] ch, int start, int length)
			throws SAXException {
		// 结果字符串
		String result = new String(ch, start, length);
		if (preName != null) {
			if (preName.equals("no")) {
				student.setNo(Integer.valueOf(result));
			} else if (preName.equals("name")) {
				student.setName(result);
			} else if (preName.equals("age")) {
				student.setAge(Integer.valueOf(result));
			}else if (preName.equals("country")) {
				student.setCountry(result);
			} else if (preName.equals("sex")) {
				student.setSex(result);
			}
		}
	}

	/*
	 * 解析程序读取结束标签时候触发的方法 qName： 当前结束节点的名字
	 */
	@Override
	public void endElement(String uri, String localName, String qName)
			throws SAXException {
		if (qName.equals("student")) {
			students.add(student);
			student = null;
		}
		preName = null;
	}

}
 