package StudyJSON.studyJDBC;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;

/*
 * JDBC:java Dataa Base Connectivity:java数据库链接，是一个规范。
 * 	  	通过JDBC,Java应用程序可以管理数据库，是一种用于执行SQL语句的Java API，
 * 		JDBC可以为多种关系数据库提供统一访问，它由一组用Java语言编写的类和接口组成
 * 	相关类或借口：位于Java.sql包
 * 		java.sql.DriverManager	用于管理java驱动程序
		java.sql.Connection	用于建立一个数据库连接对象
		java.sql.Statement	用于执行静态的sql语句对象
		java.sql.PerpardStatement	用于执行预处理sql语句对象
		java.sql.ResultSet	用于保存sql语句的结果集
	使用步骤：前提是驱动的jar包添加到项目构建路径中
		1 加载数据库驱动
		2 连接数据库
	 	3 使用语句进行数据库操作
		4 得到返回值
		5 关闭数据库
		
 */
public class TestDB {

	public static void main(String[] args) {
		Connection conn =  null;
		try {
			Class.forName("org.sqlite.JDBC");
			String url = "jdbc:sqlite://e:\软件\sql/test.db";
			String user = "";
			String password = "";
			conn = DriverManager.getConnection(url,user,password);
			Statement stmt = conn.createStatement();
			int num = stmt.executeUpdate("insert into user(name,sex,age) values('wangdan','male',40)");
			if(num>0){
				System.out.println("insert success!");
			}
			else{
				System.out.println("insert fild。。");
			}
		} catch (ClassNotFoundException e) {
			// TODO 自动生成的 catch 块
			e.printStackTrace();
		} catch (SQLException e) {
			// TODO 自动生成的 catch 块
			e.printStackTrace();
		}
	}

}
