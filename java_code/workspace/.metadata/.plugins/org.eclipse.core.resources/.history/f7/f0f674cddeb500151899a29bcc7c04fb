package StudyXML;

import java.awt.print.Book;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;
/*元素的命名规则：
 * 	1 严格区分大小写
 * 	2 不能以数字和“_”开头
 * 	3 不能使用xml(或XML)关键字开始
 * 	4 不能包含空格
 * 	5 名称之间不能包含：号
 * 实体引用：
 * 		>:&lt
 * 解析方式：
 * 	1 SAX解析：使用事件方式解析
 * 	2 pull解析：使用事件常量解析
 * 	3 DOM解析：把XML完全转换为dom树村子内存中解析
 */

public class TestXMLSax {

	public static void main(String[] args) {
		SAXParser parser =null;
		List<Book> books = new ArrayList<>();
		MyHandler handler = new MyHandler(books);
		try {
			parser = SAXParserFactory.newInstance().newSAXParser();
			parser.parse(new File("Book.xml"),handler);
		} catch (ParserConfigurationException e) {
			// TODO 自动生成的 catch 块
			e.printStackTrace();
		} catch (SAXException e) {
			// TODO 自动生成的 catch 块
			e.printStackTrace();
		} catch (IOException e) {
			// TODO 自动生成的 catch 块
			e.printStackTrace();
		}
		for(Book b:books){
			System.out.println(b);
		}
	}

	class MyHandler extends DefaultHandler{
		private List<Book> books;
		//上一个节点的名字，目的是便于知晓文本所属的节点
		private String preName;
		//定义对想的变量
		private Book book;
		public MyHandler(List<Book> books) {
			this.books = books;
		}
		@Override
		public void startDocument() throws SAXException {
			// TODO 自动生成的方法存根
			super.startDocument();
		}
		/*当解析程序读取开始标签的时候触发的事件，通常作对象初始化工作，例如初始化list集合
			qName代表当前节点名称
		 */
		@Override
		public void startElement(String uri, String localName, String qName,
				Attributes attributes) throws SAXException {
			if(qName.equals("book")){
				book = new Book();
			}
			else if(qName.equals("id")){
				
			}
			preName = qName;//
			
		}
		/*结束程序读取标签出发的方法
		qName
		 */
		@Override
		public void endElement(String uri, String localName, String qName)
				throws SAXException {
			if(qName.equals("books")){
				books.add(book);
				book = null;
			}
		}
		
		@Override
		public void characters(char[] ch, int start, int length)
				throws SAXException {
			//结果字符集
			String result = new String(ch, start,length);
			if(preName.equals("id")){
				book.setId(Integer.valueOf(result));
			}
			else if(preName.equals("name")){
				book.setName(preName);
			}
		}
	}
}









